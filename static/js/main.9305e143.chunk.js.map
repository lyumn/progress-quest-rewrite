{"version":3,"sources":["config.js","utils/storage.js","reducers/concerns/loadStorage.js","reducers/inventory.js","utils/randomHelpers.js","reducers/characterSheet.js","reducers/equipments.js","reducers/plotDevelopment.js","reducers/quests.js","reducers/spellBook.js","reducers/concerns/bars.js","reducers/bars/encumbranceBar.js","reducers/bars/experienceBar.js","reducers/bars/plotBar.js","reducers/bars/questBar.js","reducers/bars/taskBar.js","reducers/index.js","components/GameTitle.jsx","theme.js","components/shared/BoxWithTitle.jsx","components/shared/GameTable.jsx","components/CharacterSheet/TraitsTable.jsx","components/CharacterSheet/StatsTable.jsx","components/shared/ProgressBar.jsx","components/CharacterSheet/ExperienceBar.jsx","components/CharacterSheet/index.jsx","containers/CharacterSheetContainer.js","components/Inventory.jsx","containers/InventoryContainer.js","components/Equipments.jsx","containers/EquipmentsContainer.js","components/PlotDevelopment.jsx","containers/PlotDevelopmentContainer.js","components/Quests.jsx","containers/QuestsContainer.js","components/SpellBook.jsx","containers/SpellBookContainer.js","containers/TaskBarContainer.js","reducers/helpers/main.js","gameEngine/completeTask.js","gameEngine/index.js","containers/MainContainer.js","actions/index.js","reducers/helpers/newCharacter.js","components/NewCharacter/StatsGeneration.jsx","components/NewCharacter/NameGeneration.jsx","components/NewCharacter/RaceSelection.jsx","components/NewCharacter/ClassSelection.jsx","containers/NewCharacterContainer.js","containers/App.js","index.js"],"names":["window","K","Traits","PrimeStats","Stats","slice","concat","Equips","Spells","OffenseAttrib","DefenseAttrib","Shields","Armors","Weapons","Specials","ItemAttrib","ItemOfs","BoringItems","Monsters","name","level","loot","MonMods","OffenseBad","DefenseBad","Races","Klasses","Titles","ImpressiveTitles","Number","prototype","div","divisor","dividend","this","Math","ceil","floor","_","require","KEYS","save","data","saveName","characterSheet","Name","roster","JSON","parse","localStorage","getItem","pick","apply","setItem","stringify","loadGame","state","key","Object","objectSpread","location","href","split","pop","load","initialState","quantity","getInventory","inventory","arguments","length","undefined","action","type","newState","toConsumableArray","push","value","price","pay","splice","sellOne","InterestingItem","random","int","BoringItem","odds","chance","outof","arr","KParts","generateName","result","i","charAt","toUpperCase","rollAllStats","stats","retVal","forEach","e","abs","x","prefix","a","m","s","sep","Sick","Young","Big","Special","includes","Race","Class","Level","STR","CON","DEX","INT","WIS","CHA","HP Max","MP Max","STAT_NAMES","getCharacterSheet","getTraits","getStats","updateName","roll","randStat1","randStat2","levelUp","chooseClass","chooseRace","Weapon","Shield","Helm","Hauberk","Brassairts","Vambraces","Gauntlets","Gambeson","Cuisses","Greaves","Sollerets","getEquipments","equipments","buy","equipType","Act","getPlotDevelopment","plotDevelopment","completeAct","getQuests","quests","completeQuest","quest","randomQuest","getSpellBook","spellBook","humanizePosition","position","total","toFixed","increment","getPosition","encumbranceBar","experienceBar","plotBar","questBar","task","taskType","monster","taskBar","getTask","text","nextTask","combineReducers","GameTitle","gameData","keys","_error","gameDataList","react_default","createElement","style","height","display","justifyContent","alignItems","Grid","areas","start","end","columns","rows","gap","Box","gridArea","align","animation","Text","fontSize","Button","label","onClick","marginTop","plain","Menu","items","map","icon","disabled","theme","dark","global","colors","brand","accent-1","accent-2","light","font","family","size","radioButton","styles","box","border","borderColor","borderRadius","textAlign","title","backgroundColor","top","left","padding","body","margin","BoxWithTitle","_ref","children","lineHeight","TextWraper","GameTable","_ref2","hasHeader","Table","TableHeader","TableRow","c","TableCell","property","scope","GameTable_TextWraper","TableBody","datum","dataScope","format","defaultProps","COLUMNS","TraitsTable","traits","trait","shared_GameTable","StatsTable","filter","stat","container","progress","width","ProgressBar","ExperienceBar","shared_ProgressBar","CharacterSheet","experience","shared_BoxWithTitle","CharacterSheet_TraitsTable","CharacterSheet_StatsTable","CharacterSheet_ExperienceBar","connect","components_CharacterSheet","InventoryTable","props","item","qty","Inventory","encumbrance","Inventory_InventoryTable","components_Inventory","EquipmentTable","category","Equipments","Equipments_EquipmentTable","components_Equipments","PlotDevelopment","plotProgress","CheckBox","checked","Array","from","range","romanize","components_PlotDevelopment","checkBox","Quests","questProgress","array","max","DISPLAY_MAX","displayArray","components_Quests","SpellBookTable","spell","SpellBook","SpellBook_SpellBookTable","components_SpellBook","taskProgress","getMain","getLevel","helpers","isEncumbranceFull","isExperienceBarFull","isPlotBarFull","isQuestBarFull","isTaskBarFull","currentTaskType","currentTaskMonster","isInventoryEmpty","nextEquipmentPrice","getGold","currentMonsterLoot","toLowerCase","nextLevelUpTime","completeTask","equips","stuff","better","worse","posn","modifier","randomEquip","amt","definite","lev","parseInt","ii","m1","b","Humanize","pluralize","randomeMonsterTask","delayedCall","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","delay","stop","_x","_ref3","_callee2","incrementTask","completePlot","incrementExperience","incrementQuest","incrementPlot","_context2","_x2","useEffect","_err","reload","id","containers_CharacterSheetContainer","justify","EquipmentsContainer","background","containers_PlotDevelopmentContainer","containers_SpellBookContainer","containers_InventoryContainer","containers_QuestsContainer","TaskBarContainer","sold","StatsGeneration","onRoll","onSold","marginLeft","NameGeneration","onUpdate","onGenerateName","TextInput","onChange","event","target","RaceSelection","selected","onSelect","vertical","RadioButton","ClassSelection","NewCharacter_NameGeneration","NewCharacter_RaceSelection","NewCharacter_ClassSelection","NewCharacter_StatsGeneration","App","Grommet","react_router_dom","react_router","path","exact","component","NewCharacterContainer","MainContainer","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","render","es","src_containers_App","document","getElementById"],"mappings":"+FAAAA,OAAOC,EAAI,GAEXD,OAAOC,EAAEC,OAAS,CAAC,OAAQ,OAAQ,QAAS,SAE5CF,OAAOC,EAAEE,WAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DH,OAAOC,EAAEG,MAAQJ,OAAOC,EAAEE,WAAWE,MAAM,GAAGC,OAAO,CAAC,SAAU,WAEhEN,OAAOC,EAAEM,OAAS,CAChB,SACA,SACA,OACA,UACA,aACA,YACA,YACA,WACA,UACA,UACA,aAGFP,OAAOC,EAAEO,OAAS,CAChB,eACA,eACA,YACA,YACA,UACA,UACA,MACA,YACA,aACA,oBACA,eACA,kBACA,kBACA,gBACA,kBACA,gBACA,UACA,iBACA,cACA,aACA,gBACA,WACA,uBACA,eACA,iBACA,YACA,iBACA,UACA,qBACA,wBACA,aACA,SACA,iBACA,yBACA,QACA,cACA,gBACA,kBACA,cACA,cACA,wBACA,oBACA,gBACA,eACA,cACA,eACA,eACA,sBAGFR,OAAOC,EAAEQ,cAAgB,CACvB,cACA,cACA,WACA,aACA,YACA,aACA,aACA,cACA,aACA,eACA,aAGFT,OAAOC,EAAES,cAAgB,CACvB,aACA,YACA,YACA,eACA,UACA,aACA,UACA,gBACA,aAGFV,OAAOC,EAAEU,QAAU,CACjB,YACA,cACA,oBACA,YACA,eACA,WACA,iBACA,aACA,WACA,cACA,gBACA,WACA,iBACA,oBACA,WACA,qBAGFX,OAAOC,EAAEW,OAAS,CAChB,SACA,YACA,WACA,WACA,YACA,YACA,cACA,aACA,aACA,cACA,gBACA,eACA,iBACA,eACA,SACA,YACA,cACA,kBACA,kBACA,aAGFZ,OAAOC,EAAEY,QAAU,CACjB,UACA,kBACA,SACA,UACA,WACA,aACA,gBACA,gBACA,aACA,YACA,YACA,aACA,aACA,YACA,SACA,eACA,aACA,eACA,aACA,aACA,aACA,aACA,gBACA,cACA,aACA,UACA,eACA,UACA,cACA,iBACA,cACA,aACA,kBACA,aACA,cACA,WACA,aACA,YACA,gBAGFb,OAAOC,EAAEa,SAAW,CAClB,SACA,UACA,WACA,QACA,QACA,WACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,YACA,UACA,YACA,OACA,SACA,WACA,aACA,SACA,SACA,UACA,OACA,WACA,MACA,SACA,WACA,UACA,SACA,QACA,UACA,WACA,OACA,cAGFd,OAAOC,EAAEc,WAAa,CACpB,SACA,SACA,WACA,SACA,YACA,WACA,UACA,OACA,YACA,WACA,SACA,UACA,cACA,QACA,YACA,WACA,YACA,SACA,YACA,SACA,cACA,UACA,eACA,WACA,aACA,WACA,SACA,aACA,YACA,cACA,OACA,SACA,YAGFf,OAAOC,EAAEe,QAAU,CACjB,aACA,gBACA,cACA,YACA,SACA,SACA,QACA,UACA,eACA,WACA,WACA,eACA,UACA,MACA,YACA,YACA,QACA,YACA,eACA,SACA,OACA,WACA,cACA,aACA,UACA,WACA,aACA,gBACA,kBACA,UACA,OACA,WACA,QACA,OACA,MACA,QACA,YACA,UACA,eACA,aACA,aACA,SACA,SACA,UACA,UACA,OACA,UACA,KACA,WACA,aACA,WACA,cAGFhB,OAAOC,EAAEgB,YAAc,CACrB,OACA,YACA,OACA,SACA,SACA,OACA,YACA,OACA,YACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,SACA,UACA,OACA,WACA,cACA,OACA,WACA,QACA,OACA,OACA,SACA,QACA,UACA,MACA,UACA,SACA,QACA,cACA,QACA,OACA,WACA,SACA,UACA,UACA,WACA,QAGFjB,OAAOC,EAAEiB,SAAW,CAClB,CAAEC,KAAM,UAAWC,MAAO,EAAGC,KAAM,UACnC,CAAEF,KAAM,MAAOC,MAAO,EAAGC,KAAM,WAC/B,CAAEF,KAAM,MAAOC,MAAO,EAAGC,KAAM,OAC/B,CAAEF,KAAM,iBAAkBC,MAAO,GAAIC,KAAM,OAC3C,CAAEF,KAAM,WAAYC,MAAO,GAAIC,KAAM,YACrC,CAAEF,KAAM,gBAAiBC,MAAO,GAAIC,KAAM,UAC1C,CAAEF,KAAM,YAAaC,MAAO,EAAGC,KAAM,UACrC,CAAEF,K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","file":"static/js/main.9305e143.chunk.js","sourcesContent":["window.K = {};\n\nwindow.K.Traits = ['Name', 'Race', 'Class', 'Level'];\n\nwindow.K.PrimeStats = ['STR', 'CON', 'DEX', 'INT', 'WIS', 'CHA'];\nwindow.K.Stats = window.K.PrimeStats.slice(0).concat(['HP Max', 'MP Max']);\n\nwindow.K.Equips = [\n  'Weapon',\n  'Shield',\n  'Helm',\n  'Hauberk',\n  'Brassairts',\n  'Vambraces',\n  'Gauntlets',\n  'Gambeson',\n  'Cuisses',\n  'Greaves',\n  'Sollerets'\n];\n\nwindow.K.Spells = [\n  'Slime Finger',\n  'Rabbit Punch',\n  'Hastiness',\n  'Good Move',\n  'Sadness',\n  'Seasick',\n  'Gyp',\n  'Shoelaces',\n  'Innoculate',\n  'Cone of Annoyance',\n  'Magnetic Orb',\n  'Invisible Hands',\n  'Revolting Cloud',\n  'Aqueous Humor',\n  'Spectral Miasma',\n  'Clever Fellow',\n  'Lockjaw',\n  'History Lesson',\n  'Hydrophobia',\n  'Big Sister',\n  'Cone of Paste',\n  'Mulligan',\n  \"Nestor's Bright Idea\",\n  'Holy Batpole',\n  'Tumor (Benign)',\n  'Braingate',\n  'Summon a Bitch',\n  'Nonplus',\n  'Animate Nightstand',\n  'Eye of the Troglodyte',\n  'Curse Name',\n  'Dropsy',\n  'Vitreous Humor',\n  \"Roger's Grand Illusion\",\n  'Covet',\n  'Black Idaho',\n  'Astral Miasma',\n  'Spectral Oyster',\n  'Acrid Hands',\n  'Angioplasty',\n  \"Grognor's Big Day Off\",\n  'Tumor (Malignant)',\n  'Animate Tunic',\n  'Ursine Armor',\n  'Holy Roller',\n  'Tonsilectomy',\n  'Curse Family',\n  'Infinite Confusion'\n];\n\nwindow.K.OffenseAttrib = [\n  'Polished|+1',\n  'Serrated|+1',\n  'Heavy|+1',\n  'Pronged|+2',\n  'Steely|+2',\n  'Vicious|+3',\n  'Venomed|+4',\n  'Stabbity|+4',\n  'Dancing|+5',\n  'Invisible|+6',\n  'Vorpal|+7'\n];\n\nwindow.K.DefenseAttrib = [\n  'Studded|+1',\n  'Banded|+2',\n  'Gilded|+2',\n  'Festooned|+3',\n  'Holy|+4',\n  'Cambric|+1',\n  'Fine|+4',\n  'Impressive|+5',\n  'Custom|+3'\n];\n\nwindow.K.Shields = [\n  'Parasol|0',\n  'Pie Plate|1',\n  'Garbage Can Lid|2',\n  'Buckler|3',\n  'Plexiglass|4',\n  'Fender|4',\n  'Round Shield|5',\n  'Carapace|5',\n  'Scutum|6',\n  'Propugner|6',\n  'Kite Shield|7',\n  'Pavise|8',\n  'Tower Shield|9',\n  'Baroque Shield|11',\n  'Aegis|12',\n  'Magnetic Field|18'\n];\n\nwindow.K.Armors = [\n  'Lace|1',\n  'Macrame|2',\n  'Burlap|3',\n  'Canvas|4',\n  'Flannel|5',\n  'Chamois|6',\n  'Pleathers|7',\n  'Leathers|8',\n  'Bearskin|9',\n  'Ringmail|10',\n  'Scale Mail|12',\n  'Chainmail|14',\n  'Splint Mail|15',\n  'Platemail|16',\n  'ABS|17',\n  'Kevlar|18',\n  'Titanium|19',\n  'Mithril Mail|20',\n  'Diamond Mail|25',\n  'Plasma|30'\n];\n\nwindow.K.Weapons = [\n  'Stick|0',\n  'Broken Bottle|1',\n  'Shiv|1',\n  'Sprig|1',\n  'Oxgoad|1',\n  'Eelspear|2',\n  'Bowie Knife|2',\n  'Claw Hammer|2',\n  'Handpeen|2',\n  'Andiron|3',\n  'Hatchet|3',\n  'Tomahawk|3',\n  'Hackbarm|3',\n  'Crowbar|4',\n  'Mace|4',\n  'Battleadze|4',\n  'Leafmace|5',\n  'Shortsword|5',\n  'Longiron|5',\n  'Poachard|5',\n  'Baselard|5',\n  'Whinyard|6',\n  'Blunderbuss|6',\n  'Longsword|6',\n  'Crankbow|6',\n  'Blibo|7',\n  'Broadsword|7',\n  'Kreen|7',\n  'Warhammer|7',\n  'Morning Star|8',\n  'Pole-adze|8',\n  'Spontoon|8',\n  'Bastard Sword|9',\n  'Peen-arm|9',\n  'Culverin|10',\n  'Lance|10',\n  'Halberd|11',\n  'Poleax|12',\n  'Bandyclef|15'\n];\n\nwindow.K.Specials = [\n  'Diadem',\n  'Festoon',\n  'Gemstone',\n  'Phial',\n  'Tiara',\n  'Scabbard',\n  'Arrow',\n  'Lens',\n  'Lamp',\n  'Hymnal',\n  'Fleece',\n  'Laurel',\n  'Brooch',\n  'Gimlet',\n  'Cobble',\n  'Albatross',\n  'Brazier',\n  'Bandolier',\n  'Tome',\n  'Garnet',\n  'Amethyst',\n  'Candelabra',\n  'Corset',\n  'Sphere',\n  'Sceptre',\n  'Ankh',\n  'Talisman',\n  'Orb',\n  'Gammel',\n  'Ornament',\n  'Brocade',\n  'Galoon',\n  'Bijou',\n  'Spangle',\n  'Gimcrack',\n  'Hood',\n  'Vulpeculum'\n];\n\nwindow.K.ItemAttrib = [\n  'Golden',\n  'Gilded',\n  'Spectral',\n  'Astral',\n  'Garlanded',\n  'Precious',\n  'Crafted',\n  'Dual',\n  'Filigreed',\n  'Cruciate',\n  'Arcane',\n  'Blessed',\n  'Reverential',\n  'Lucky',\n  'Enchanted',\n  'Gleaming',\n  'Grandiose',\n  'Sacred',\n  'Legendary',\n  'Mythic',\n  'Crystalline',\n  'Austere',\n  'Ostentatious',\n  'One True',\n  'Proverbial',\n  'Fearsome',\n  'Deadly',\n  'Benevolent',\n  'Unearthly',\n  'Magnificent',\n  'Iron',\n  'Ormolu',\n  'Puissant'\n];\n\nwindow.K.ItemOfs = [\n  'Foreboding',\n  'Foreshadowing',\n  'Nervousness',\n  'Happiness',\n  'Torpor',\n  'Danger',\n  'Craft',\n  'Silence',\n  'Invisibility',\n  'Rapidity',\n  'Pleasure',\n  'Practicality',\n  'Hurting',\n  'Joy',\n  'Petulance',\n  'Intrusion',\n  'Chaos',\n  'Suffering',\n  'Extroversion',\n  'Frenzy',\n  'Sisu',\n  'Solitude',\n  'Punctuality',\n  'Efficiency',\n  'Comfort',\n  'Patience',\n  'Internment',\n  'Incarceration',\n  'Misapprehension',\n  'Loyalty',\n  'Envy',\n  'Acrimony',\n  'Worry',\n  'Fear',\n  'Awe',\n  'Guile',\n  'Prurience',\n  'Fortune',\n  'Perspicacity',\n  'Domination',\n  'Submission',\n  'Fealty',\n  'Hunger',\n  'Despair',\n  'Cruelty',\n  'Grob',\n  'Dignard',\n  'Ra',\n  'the Bone',\n  'Diamonique',\n  'Electrum',\n  'Hydragyrum'\n];\n\nwindow.K.BoringItems = [\n  'nail',\n  'lunchpail',\n  'sock',\n  'I.O.U.',\n  'cookie',\n  'pint',\n  'toothpick',\n  'writ',\n  'newspaper',\n  'letter',\n  'plank',\n  'hat',\n  'egg',\n  'coin',\n  'needle',\n  'bucket',\n  'ladder',\n  'chicken',\n  'twig',\n  'dirtclod',\n  'counterpane',\n  'vest',\n  'teratoma',\n  'bunny',\n  'rock',\n  'pole',\n  'carrot',\n  'canoe',\n  'inkwell',\n  'hoe',\n  'bandage',\n  'trowel',\n  'towel',\n  'planter box',\n  'anvil',\n  'axle',\n  'tuppence',\n  'casket',\n  'nosegay',\n  'trinket',\n  'credenza',\n  'writ'\n];\n\nwindow.K.Monsters = [\n  { name: 'Anhkheg', level: 6, loot: 'chitin' },\n  { name: 'Ant', level: 0, loot: 'antenna' },\n  { name: 'Ape', level: 4, loot: 'ass' },\n  { name: 'Baluchitherium', level: 14, loot: 'ear' },\n  { name: 'Beholder', level: 10, loot: 'eyestalk' },\n  { name: 'Black Pudding', level: 10, loot: 'saliva' },\n  { name: 'Blink Dog', level: 4, loot: 'eyelid' },\n  { name: 'Cub Scout', level: 1, loot: 'neckerchief' },\n  { name: 'Girl Scout', level: 2, loot: 'cookie' },\n  { name: 'Boy Scout', level: 3, loot: 'merit badge' },\n  { name: 'Eagle Scout', level: 4, loot: 'merit badge' },\n  { name: 'Bugbear', level: 3, loot: 'skin' },\n  { name: 'Bugboar', level: 3, loot: 'tusk' },\n  { name: 'Boogie', level: 3, loot: 'slime' },\n  { name: 'Camel', level: 2, loot: 'hump' },\n  { name: 'Carrion Crawler', level: 3, loot: 'egg' },\n  { name: 'Catoblepas', level: 6, loot: 'neck' },\n  { name: 'Centaur', level: 4, loot: 'rib' },\n  { name: 'Centipede', level: 0, loot: 'leg' },\n  { name: 'Cockatrice', level: 5, loot: 'wattle' },\n  { name: 'Couatl', level: 9, loot: 'wing' },\n  { name: 'Crayfish', level: 0, loot: 'antenna' },\n  { name: 'Demogorgon', level: 53, loot: 'tentacle' },\n  { name: 'Jubilex', level: 17, loot: 'gel' },\n  { name: 'Manes', level: 1, loot: 'tooth' },\n  { name: 'Orcus', level: 27, loot: 'wand' },\n  { name: 'Succubus', level: 6, loot: 'bra' },\n  { name: 'Vrock', level: 8, loot: 'neck' },\n  { name: 'Hezrou', level: 9, loot: 'leg' },\n  { name: 'Glabrezu', level: 10, loot: 'collar' },\n  { name: 'Nalfeshnee', level: 11, loot: 'tusk' },\n  { name: 'Marilith', level: 7, loot: 'arm' },\n  { name: 'Balor', level: 8, loot: 'whip' },\n  { name: 'Yeenoghu', level: 25, loot: 'flail' },\n  { name: 'Asmodeus', level: 52, loot: 'leathers' },\n  { name: 'Baalzebul', level: 43, loot: 'pants' },\n  { name: 'Barbed Devil', level: 8, loot: 'flame' },\n  { name: 'Bone Devil', level: 9, loot: 'hook' },\n  { name: 'Dispater', level: 30, loot: 'matches' },\n  { name: 'Erinyes', level: 6, loot: 'thong' },\n  { name: 'Geryon', level: 30, loot: 'cornucopia' },\n  { name: 'Malebranche', level: 5, loot: 'fork' },\n  { name: 'Ice Devil', level: 11, loot: 'snow' },\n  { name: 'Lemure', level: 3, loot: 'blob' },\n  { name: 'Pit Fiend', level: 13, loot: 'seed' },\n  { name: 'Anklyosaurus', level: 9, loot: 'tail' },\n  { name: 'Brontosaurus', level: 30, loot: 'brain' },\n  { name: 'Diplodocus', level: 24, loot: 'fin' },\n  { name: 'Elasmosaurus', level: 15, loot: 'neck' },\n  { name: 'Gorgosaurus', level: 13, loot: 'arm' },\n  { name: 'Iguanadon', level: 6, loot: 'thumb' },\n  { name: 'Megalosaurus', level: 12, loot: 'jaw' },\n  { name: 'Monoclonius', level: 8, loot: 'horn' },\n  { name: 'Pentasaurus', level: 12, loot: 'head' },\n  { name: 'Stegosaurus', level: 18, loot: 'plate' },\n  { name: 'Triceratops', level: 16, loot: 'horn' },\n  { name: 'Tyranosauraus Rex', level: 18, loot: 'forearm' },\n  { name: 'Djinn', level: 7, loot: 'lamp' },\n  { name: 'Doppleganger', level: 4, loot: 'face' },\n  { name: 'Black Dragon', level: 7, loot: '*' },\n  { name: 'Plaid Dragon', level: 7, loot: 'sporrin' },\n  { name: 'Blue Dragon', level: 9, loot: '*' },\n  { name: 'Beige Dragon', level: 9, loot: '*' },\n  { name: 'Brass Dragon', level: 7, loot: 'pole' },\n  { name: 'Tin Dragon', level: 8, loot: '*' },\n  { name: 'Bronze Dragon', level: 9, loot: 'medal' },\n  { name: 'Chromatic Dragon', level: 16, loot: 'scale' },\n  { name: 'Copper Dragon', level: 8, loot: 'loafer' },\n  { name: 'Gold Dragon', level: 8, loot: 'filling' },\n  { name: 'Green Dragon', level: 8, loot: '*' },\n  { name: 'Platinum Dragon', level: 21, loot: '*' },\n  { name: 'Red Dragon', level: 10, loot: 'cocktail' },\n  { name: 'Silver Dragon', level: 10, loot: '*' },\n  { name: 'White Dragon', level: 6, loot: 'tooth' },\n  { name: 'Dragon Turtle', level: 13, loot: 'shell' },\n  { name: 'Dryad', level: 2, loot: 'acorn' },\n  { name: 'Dwarf', level: 1, loot: 'drawers' },\n  { name: 'Eel', level: 2, loot: 'sashimi' },\n  { name: 'Efreet', level: 10, loot: 'cinder' },\n  { name: 'Sand Elemental', level: 8, loot: 'glass' },\n  { name: 'Bacon Elemental', level: 10, loot: 'bit' },\n  { name: 'Porn Elemental', level: 12, loot: 'lube' },\n  { name: 'Cheese Elemental', level: 14, loot: 'curd' },\n  { name: 'Hair Elemental', level: 16, loot: 'follicle' },\n  { name: 'Swamp Elf', level: 1, loot: 'lilypad' },\n  { name: 'Brown Elf', level: 1, loot: 'tusk' },\n  { name: 'Sea Elf', level: 1, loot: 'jerkin' },\n  { name: 'Ettin', level: 10, loot: 'fur' },\n  { name: 'Frog', level: 0, loot: 'leg' },\n  { name: 'Violet Fungi', level: 3, loot: 'spore' },\n  { name: 'Gargoyle', level: 4, loot: 'gravel' },\n  { name: 'Gelatinous Cube', level: 4, loot: 'jam' },\n  { name: 'Ghast', level: 4, loot: 'vomit' },\n  { name: 'Ghost', level: 10, loot: '*' },\n  { name: 'Ghoul', level: 2, loot: 'muscle' },\n  { name: 'Humidity Giant', level: 12, loot: 'drops' },\n  { name: 'Beef Giant', level: 11, loot: 'steak' },\n  { name: 'Quartz Giant', level: 10, loot: 'crystal' },\n  { name: 'Porcelain Giant', level: 9, loot: 'fixture' },\n  { name: 'Rice Giant', level: 8, loot: 'grain' },\n  { name: 'Cloud Giant', level: 12, loot: 'condensation' },\n  { name: 'Fire Giant', level: 11, loot: 'cigarettes' },\n  { name: 'Frost Giant', level: 10, loot: 'snowman' },\n  { name: 'Hill Giant', level: 8, loot: 'corpse' },\n  { name: 'Stone Giant', level: 9, loot: 'hatchling' },\n  { name: 'Storm Giant', level: 15, loot: 'barometer' },\n  { name: 'Mini Giant', level: 4, loot: 'pompadour' },\n  { name: 'Gnoll', level: 2, loot: 'collar' },\n  { name: 'Gnome', level: 1, loot: 'hat' },\n  { name: 'Goblin', level: 1, loot: 'ear' },\n  { name: 'Grid Bug', level: 1, loot: 'carapace' },\n  { name: 'Jellyrock', level: 9, loot: 'seedling' },\n  { name: 'Beer Golem', level: 15, loot: 'foam' },\n  { name: 'Oxygen Golem', level: 17, loot: 'platelet' },\n  { name: 'Cardboard Golem', level: 14, loot: 'recycling' },\n  { name: 'Rubber Golem', level: 16, loot: 'ball' },\n  { name: 'Leather Golem', level: 15, loot: 'fob' },\n  { name: 'Gorgon', level: 8, loot: 'testicle' },\n  { name: 'Gray Ooze', level: 3, loot: 'gravy' },\n  { name: 'Green Slime', level: 2, loot: 'sample' },\n  { name: 'Griffon', level: 7, loot: 'nest' },\n  { name: 'Banshee', level: 7, loot: 'larynx' },\n  { name: 'Harpy', level: 3, loot: 'mascara' },\n  { name: 'Hell Hound', level: 5, loot: 'tongue' },\n  { name: 'Hippocampus', level: 4, loot: 'mane' },\n  { name: 'Hippogriff', level: 3, loot: 'egg' },\n  { name: 'Hobgoblin', level: 1, loot: 'patella' },\n  { name: 'Homonculus', level: 2, loot: 'fluid' },\n  { name: 'Hydra', level: 8, loot: 'gyrum' },\n  { name: 'Imp', level: 2, loot: 'tail' },\n  { name: 'Invisible Stalker', level: 8, loot: '*' },\n  { name: 'Iron Peasant', level: 3, loot: 'chaff' },\n  { name: 'Jumpskin', level: 3, loot: 'shin' },\n  { name: 'Kobold', level: 1, loot: 'penis' },\n  { name: 'Leprechaun', level: 1, loot: 'wallet' },\n  { name: 'Leucrotta', level: 6, loot: 'hoof' },\n  { name: 'Lich', level: 11, loot: 'crown' },\n  { name: 'Lizard Man', level: 2, loot: 'tail' },\n  { name: 'Lurker', level: 10, loot: 'sac' },\n  { name: 'Manticore', level: 6, loot: 'spike' },\n  { name: 'Mastodon', level: 12, loot: 'tusk' },\n  { name: 'Medusa', level: 6, loot: 'eye' },\n  { name: 'Multicell', level: 2, loot: 'dendrite' },\n  { name: 'Pirate', level: 1, loot: 'booty' },\n  { name: 'Berserker', level: 1, loot: 'shirt' },\n  { name: 'Caveman', level: 2, loot: 'club' },\n  { name: 'Dervish', level: 1, loot: 'robe' },\n  { name: 'Merman', level: 1, loot: 'trident' },\n  { name: 'Mermaid', level: 1, loot: 'gills' },\n  { name: 'Mimic', level: 9, loot: 'hinge' },\n  { name: 'Mind Flayer', level: 8, loot: 'tentacle' },\n  { name: 'Minotaur', level: 6, loot: 'map' },\n  { name: 'Yellow Mold', level: 1, loot: 'spore' },\n  { name: 'Morkoth', level: 7, loot: 'teeth' },\n  { name: 'Mummy', level: 6, loot: 'gauze' },\n  { name: 'Naga', level: 9, loot: 'rattle' },\n  { name: 'Nebbish', level: 1, loot: 'belly' },\n  { name: 'Neo-Otyugh', level: 11, loot: 'organ ' },\n  { name: 'Nixie', level: 1, loot: 'webbing' },\n  { name: 'Nymph', level: 3, loot: 'hanky' },\n  { name: 'Ochre Jelly', level: 6, loot: 'nucleus' },\n  { name: 'Octopus', level: 2, loot: 'beak' },\n  { name: 'Ogre', level: 4, loot: 'talon' },\n  { name: 'Ogre Mage', level: 5, loot: 'apparel' },\n  { name: 'Orc', level: 1, loot: 'snout' },\n  { name: 'Otyugh', level: 7, loot: 'organ' },\n  { name: 'Owlbear', level: 5, loot: 'feather' },\n  { name: 'Pegasus', level: 4, loot: 'aileron' },\n  { name: 'Peryton', level: 4, loot: 'antler' },\n  { name: 'Piercer', level: 3, loot: 'tip' },\n  { name: 'Pixie', level: 1, loot: 'dust' },\n  { name: 'Man-o-war', level: 3, loot: 'tentacle' },\n  { name: 'Purple Worm', level: 15, loot: 'dung' },\n  { name: 'Quasit', level: 3, loot: 'tail' },\n  { name: 'Rakshasa', level: 7, loot: 'pajamas' },\n  { name: 'Rat', level: 0, loot: 'tail' },\n  { name: 'Remorhaz', level: 11, loot: 'protrusion' },\n  { name: 'Roc', level: 18, loot: 'wing' },\n  { name: 'Roper', level: 11, loot: 'twine' },\n  { name: 'Rot Grub', level: 1, loot: 'eggsac' },\n  { name: 'Rust Monster', level: 5, loot: 'shavings' },\n  { name: 'Satyr', level: 5, loot: 'hoof' },\n  { name: 'Sea Hag', level: 3, loot: 'wart' },\n  { name: 'Silkie', level: 3, loot: 'fur' },\n  { name: 'Shadow', level: 3, loot: 'silhouette' },\n  { name: 'Shambling Mound', level: 10, loot: 'mulch' },\n  { name: 'Shedu', level: 9, loot: 'hoof' },\n  { name: 'Shrieker', level: 3, loot: 'stalk' },\n  { name: 'Skeleton', level: 1, loot: 'clavicle' },\n  { name: 'Spectre', level: 7, loot: 'vestige' },\n  { name: 'Sphinx', level: 10, loot: 'paw' },\n  { name: 'Spider', level: 0, loot: 'web' },\n  { name: 'Sprite', level: 1, loot: 'can' },\n  { name: 'Stirge', level: 1, loot: 'proboscis' },\n  { name: 'Stun Bear', level: 5, loot: 'tooth' },\n  { name: 'Stun Worm', level: 2, loot: 'trode' },\n  { name: 'Su-monster', level: 5, loot: 'tail' },\n  { name: 'Sylph', level: 3, loot: 'thigh' },\n  { name: 'Titan', level: 20, loot: 'sandal' },\n  { name: 'Trapper', level: 12, loot: 'shag' },\n  { name: 'Treant', level: 10, loot: 'acorn' },\n  { name: 'Triton', level: 3, loot: 'scale' },\n  { name: 'Troglodyte', level: 2, loot: 'tail' },\n  { name: 'Troll', level: 6, loot: 'hide' },\n  { name: 'Umber Hulk', level: 8, loot: 'claw' },\n  { name: 'Unicorn', level: 4, loot: 'blood' },\n  { name: 'Vampire', level: 8, loot: 'pancreas' },\n  { name: 'Wight', level: 4, loot: 'lung' },\n  { name: \"Will-o'-the-Wisp\", level: 9, loot: 'wisp' },\n  { name: 'Wraith', level: 5, loot: 'finger' },\n  { name: 'Wyvern', level: 7, loot: 'wing' },\n  { name: 'Xorn', level: 7, loot: 'jaw' },\n  { name: 'Yeti', level: 4, loot: 'fur' },\n  { name: 'Zombie', level: 2, loot: 'forehead' },\n  { name: 'Wasp', level: 0, loot: 'stinger' },\n  { name: 'Rat', level: 1, loot: 'tail' },\n  { name: 'Bunny', level: 0, loot: 'ear' },\n  { name: 'Moth', level: 0, loot: 'dust' },\n  { name: 'Beagle', level: 0, loot: 'collar' },\n  { name: 'Midge', level: 0, loot: 'corpse' },\n  { name: 'Ostrich', level: 1, loot: 'beak' },\n  { name: 'Billy Goat', level: 1, loot: 'beard' },\n  { name: 'Bat', level: 1, loot: 'wing' },\n  { name: 'Koala', level: 2, loot: 'heart' },\n  { name: 'Wolf', level: 2, loot: 'paw' },\n  { name: 'Whippet', level: 2, loot: 'collar' },\n  { name: 'Uruk', level: 2, loot: 'boot' },\n  { name: 'Poroid', level: 4, loot: 'node' },\n  { name: 'Moakum', level: 8, loot: 'frenum' },\n  { name: 'Fly', level: 0, loot: '*' },\n  { name: 'Hogbird', level: 3, loot: 'curl' },\n  { name: 'Wolog', level: 4, loot: 'lemma' }\n];\nwindow.K.MonMods = [\n  '-4 fœtal *',\n  '-4 dying *',\n  '-3 crippled *',\n  '-3 baby *',\n  '-2 adolescent',\n  '-2 very sick *',\n  '-1 lesser *',\n  '-1 undernourished *',\n  '+1 greater *',\n  '+1 * Elder',\n  '+2 war *',\n  '+2 Battle-*',\n  '+3 Were-*',\n  '+3 undead *',\n  '+4 giant *',\n  '+4 * Rex'\n];\n\nwindow.K.OffenseBad = [\n  'Dull|-2',\n  'Tarnished|-1',\n  'Rusty|-3',\n  'Padded|-5',\n  'Bent|-4',\n  'Mini|-4',\n  'Rubber|-6',\n  'Nerf|-7',\n  'Unbalanced|-2'\n];\n\nwindow.K.DefenseBad = [\n  'Holey|-1',\n  'Patched|-1',\n  'Threadbare|-2',\n  'Faded|-1',\n  'Rusty|-3',\n  'Motheaten|-3',\n  'Mildewed|-2',\n  'Torn|-3',\n  'Dented|-3',\n  'Cursed|-5',\n  'Plastic|-4',\n  'Cracked|-4',\n  'Warped|-3',\n  'Corroded|-3'\n];\n\nwindow.K.Races = [\n  'Half Orc|HP Max',\n  'Half Man|CHA',\n  'Half Halfling|DEX',\n  'Double Hobbit|STR',\n  'Hob-Hobbit|DEX,CON',\n  'Low Elf|CON',\n  'Dung Elf|WIS',\n  'Talking Pony|MP Max,INT',\n  'Gyrognome|DEX',\n  'Lesser Dwarf|CON'\n  // 'Crested Dwarf|CHA'\n  // 'Eel Man|DEX',\n  // 'Panda Man|CON,STR',\n  // 'Trans-Kobold|WIS',\n  // 'Enchanted Motorcycle|MP Max',\n  // \"Will o' the Wisp|WIS\",\n  // 'Battle-Finch|DEX,INT',\n  // 'Double Wookiee|STR',\n  // 'Skraeling|WIS',\n  // 'Demicanadian|CON',\n  // 'Land Squid|STR,HP Max'\n];\n\nwindow.K.Klasses = [\n  'Ur-Paladin|WIS,CON',\n  'Voodoo Princess|INT,CHA',\n  'Robot Monk|STR',\n  'Mu-Fu Monk|DEX',\n  'Mage Illusioner|INT,MP Max',\n  'Shiv-Knight|DEX',\n  'Inner Mason|CON',\n  'Fighter/Organist|CHA,STR',\n  'Puma Burgular|DEX',\n  'Runeloremaster|WIS'\n  // 'Hunter Strangler|DEX,INT'\n  // 'Battle-Felon|STR',\n  // 'Tickle-Mimic|WIS,INT',\n  // 'Slow Poisoner|CON',\n  // 'Bastard Lunatic|CON',\n  // 'Lowling|WIS',\n  // 'Birdrider|WIS',\n  // 'Vermineer|INT'\n];\n\nwindow.K.Titles = ['Mr.', 'Mrs.', 'Sir', 'Sgt.', 'Ms.', 'Captain', 'Chief', 'Admiral', 'Saint'];\n\nwindow.K.ImpressiveTitles = [\n  'King',\n  'Queen',\n  'Lord',\n  'Lady',\n  'Viceroy',\n  'Mayor',\n  'Prince',\n  'Princess',\n  'Chief',\n  'Boss',\n  'Archbishop'\n];\n\nNumber.prototype.div = function(divisor) {\n  const dividend = this / divisor;\n  return (dividend < 0 ? Math.ceil : Math.floor)(dividend);\n}; // where should this belong to?\n","const _ = require('lodash');\n\nconst KEYS = [\n  'inventory',\n  'characterSheet',\n  'equipments',\n  'plotDevelopment',\n  'quests',\n  'spellBook',\n  'status',\n  'taskBar',\n  'encumbranceBar',\n  'experienceBar',\n  'plotBar',\n  'questBar'\n  // 'seed'\n];\n\n// const getNestedObject = (nestedObj, pathArr) => {\n//   return pathArr.reduce(\n//     (obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined),\n//     nestedObj\n//   );\n// };\n\nexport const save = data => {\n  const saveName = data.characterSheet.Traits.Name;\n  // const saveData = {};\n  // saveData[saveName] = _.pick(data, ...KEYS);\n  let roster = JSON.parse(window.localStorage.getItem('roster'));\n  if (!roster) {\n    roster = {};\n  }\n  roster[saveName] = _.pick(data, ...KEYS);\n  window.localStorage.setItem('roster', JSON.stringify(roster)); // change this\n};\n\nexport const load = () => {\n  const name = window.location.href.split('/').pop();\n  const data = JSON.parse(window.localStorage.getItem('roster'));\n  return data[name];\n};\n\nexport const gameDataList = () => {\n  try {\n    return Object.keys(JSON.parse(window.localStorage.roster));\n  } catch (_error) {\n    return [];\n  }\n};\n","import { load } from '../../utils/storage';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const loadGame = (state, key) => {\n  let newState = { ...state };\n  const data = load();\n  newState = data[key];\n\n  return newState;\n};\n","import { loadGame } from './concerns/loadStorage';\n\nconst initialState = [\n  {\n    name: 'Gold',\n    quantity: 10\n  }\n];\n\nexport const getInventory = state => state.inventory;\n\nconst loot = (state, name) => {\n  const newState = [...state];\n  newState.push({\n    name,\n    quantity: 1\n  });\n\n  return newState;\n};\n\nconst pay = (state, price) => {\n  const newState = [...state];\n  newState[0].quantity -= price;\n\n  return newState;\n};\n\nconst sellOne = (state, price) => {\n  const newState = [...state];\n  newState[0].quantity += price;\n  newState.splice(1, 1); // TODO remove splice\n  return newState;\n};\n\nconst inventory = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAME':\n      return loadGame(state, 'inventory');\n    case 'LOOT':\n      return loot(state, action.value);\n    case 'BUY':\n      return pay(state, action.price);\n    case 'SELL_ONE':\n      return sellOne(state, action.price);\n    default:\n      return state;\n  }\n};\n\nexport default inventory;\n","import random from 'random';\nimport Humanize from 'humanize-plus';\n\nexport const SpecialItem = () => {\n  return `${InterestingItem()} of ${window.K.ItemOfs[random.int(0, window.K.ItemOfs.length - 1)]}`;\n};\n\nexport const InterestingItem = () => {\n  return `${window.K.ItemAttrib[random.int(0, window.K.ItemAttrib.length - 1)]} ${\n    window.K.Specials[random.int(0, window.K.Specials.length - 1)]\n  }`;\n};\n\nexport const BoringItem = () => {\n  return window.K.BoringItems[random.int(0, window.K.BoringItems.length - 1)];\n};\n\nexport const odds = (chance, outof) => {\n  return random.int(0, outof) < chance;\n};\n\nexport const pick = arr => arr[random.int(0, arr.length - 1)];\n\nconst KParts = [\n  'br|cr|dr|fr|gr|j|kr|l|m|n|pr||||r|sh|tr|v|wh|x|y|z'.split('|'),\n  'a|a|e|e|i|i|o|o|u|u|ae|ie|oo|ou'.split('|'),\n  'b|ck|d|g|k|m|n|p|t|v|x|z'.split('|')\n];\n\nexport function generateName() {\n  let result = '';\n  for (let i = 0; i <= 5; ++i) result += pick(KParts[i % 3]);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nfunction rollStat() {\n  return 3 + random.int(1, 6) + random.int(1, 6) + random.int(1, 6);\n}\n\nexport function rollAllStats(stats) {\n  const retVal = { ...stats };\n  window.K.PrimeStats.forEach(e => {\n    retVal[e] = rollStat(e);\n  });\n\n  return retVal;\n}\n\nexport function randomQuest() {\n  let quest;\n  switch (random.int(0, 4)) {\n    case 0:\n      // eslint-disable-next-line no-undef\n      quest = `Exterminate ${window.K.Monsters[random.int(0, window.K.Monsters.length - 1)].name}`;\n      break;\n    case 1:\n      quest = `Seek ${InterestingItem()}`;\n      break;\n    case 2:\n      quest = `Deliver this ${BoringItem()}`;\n      break;\n    case 3:\n      quest = `Fetch me ${BoringItem()}`;\n      break;\n    case 4:\n      // eslint-disable-next-line no-undef\n      quest = `Placate ${window.K.Monsters[random.int(0, window.K.Monsters.length - 1)].name}`;\n      break;\n    default:\n      quest = '';\n      break;\n  }\n\n  return quest;\n}\n\nexport function randomSpellBook() {\n  // eslint-disable-next-line no-undef\n  return [window.K.Spells[random.int(0, window.K.Spells.length - 1)], 'I'];\n}\n\nexport function randomEquip() {\n  const types = [\n    'Weapon',\n    'Shield',\n    'Helm',\n    'Hauberk',\n    'Brassairts',\n    'Vambraces',\n    'Gauntlets',\n    'Gambeson',\n    'Cuisses',\n    'Greaves',\n    'Sollerets'\n  ];\n  const posn = random.int(0, 10);\n  let stuff;\n  let better;\n  let worse;\n\n  if (!posn) {\n    stuff = window.K.Weapons;\n    better = window.K.OffenseAttrib;\n    worse = window.K.OffenseBad;\n  } else {\n    better = window.K.DefenseAttrib;\n    worse = window.K.DefenseBad;\n    stuff = posn == 1 ? window.K.Shields : window.K.Armors;\n  }\n\n  const name = stuff[random.int(0, stuff.length - 1)];\n  let modifier;\n  if (random.int(0, 4) == 0) {\n    // debugger;\n    modifier = worse[random.int(0, worse.length - 1)];\n  } else {\n    // debugger;\n    modifier = worse[random.int(0, better.length - 1)];\n  }\n  return {\n    type: types[posn],\n    name: `${modifier.split('|')[0]} ${name.split('|')[0]}`\n  };\n}\n\nfunction abs(x) {\n  if (x < 0) return -x;\n  return x;\n}\n\nfunction max(a, b) {\n  return a > b ? a : b;\n}\n\nfunction prefix(a, m, s, sep) {\n  if (sep == undefined) sep = ' ';\n  m = abs(m);\n  if (m < 1 || m > a.length) return s; // In case of screwups\n  return a[m - 1] + sep + s;\n}\n\nfunction Sick(m, s) {\n  m = 6 - abs(m);\n  return prefix(['dead', 'comatose', 'crippled', 'sick', 'undernourished'], m, s);\n}\n\nfunction Young(m, s) {\n  m = 6 - abs(m);\n  return prefix(['foetal', 'baby', 'preadolescent', 'teenage', 'underage'], m, s);\n}\n\nfunction Big(m, s) {\n  return prefix(['greater', 'massive', 'enormous', 'giant', 'titanic'], m, s);\n}\n\nfunction Special(m, s) {\n  if (s.includes(' ')) return prefix(['veteran', 'cursed', 'warrior', 'undead', 'demon'], m, s);\n  return prefix(['Battle-', 'cursed ', 'Were-', 'undead ', 'demon '], m, s, '');\n}\n\nexport function randomeMonsterTask(level) {\n  let definite = false;\n  let i;\n  for (i = level; i >= 1; --i) {\n    if (odds(2, 5)) level += random.int(1, 2) * 2 - 1;\n  }\n  if (level < 1) level = 1;\n  // level = level of puissance of opponent(s) we'll return\n\n  let monster = {\n    name: null,\n    level: null,\n    loot: null\n  };\n  let lev;\n  if (odds(1, 25)) {\n    // Use an NPC every once in a while\n    monster.name = `${pick(window.K.Races).split('|')[0]}`;\n    monster.level = parseInt(pick(window.K.Races).split('|')[1]);\n    monster.loot = `${pick(window.K.Races).split('|')[2]}`;\n    // debugger;\n    if (odds(1, 2)) {\n      monster.name = `passing ${monster} ${pick(window.K.Klasses).split('|')[0]}`;\n      // level and loot?\n    } else {\n      monster.name = `${pick(window.K.Titles)} ${generateName()} the ${monster}`;\n      definite = true;\n    }\n    lev = level;\n    monster.name = `${monster}|${level}|*`;\n  } else if ('game.questmonster' && odds(1, 4)) {\n    // todo quest monster\n    // Use the quest monster\n    // monster = K.Monsters[game.questmonsterindex];\n    monster = window.K.Monsters[1];\n    lev = monster.level;\n  } else {\n    // Pick the monster out of so many random ones closest to the level we want\n    monster = pick(window.K.Monsters);\n    lev = monster.level;\n    for (let ii = 0; ii < 5; ++ii) {\n      const m1 = pick(window.K.Monsters);\n      if (abs(level - m1.level) < abs(level - lev)) {\n        monster = m1;\n        lev = monster.level;\n      }\n    }\n  }\n\n  let result = monster.name;\n  // game.task = 'kill|' + monster;\n\n  let qty = 1;\n  if (level - lev > 10) {\n    // lev is too low. multiply...\n    qty = Math.floor((level + random.int(1, lev)) / max(lev, 1));\n    if (qty < 1) qty = 1;\n    level = Math.floor(level / qty);\n  }\n\n  if (level - lev <= -10) {\n    result = `imaginary ${result}`;\n  } else if (level - lev < -5) {\n    i = 10 + (level - lev);\n    i = 5 - random.int(1, i + 1);\n    result = Sick(i, Young(lev - level - i, result));\n  } else if (level - lev < 0 && random.int(1, i + 1) == 1) {\n    result = Sick(level - lev, result);\n  } else if (level - lev < 0) {\n    result = Young(level - lev, result);\n  } else if (level - lev >= 10) {\n    result = `messianic ${result}`;\n  } else if (level - lev > 5) {\n    i = 10 - (level - lev);\n    i = 5 - random.int(1, i + 1);\n    result = Big(i, Special(level - lev - i, result));\n  } else if (level - lev > 0 && random.int(1, 2) == 1) {\n    result = Big(level - lev, result);\n  } else if (level - lev > 0) {\n    result = Special(level - lev, result);\n  }\n\n  lev = level;\n  level = lev * qty;\n\n  if (!definite) result = `${qty} ${Humanize.pluralize(qty, result)}`; // TODO move humanization to the reducer\n  return { text: result, monster };\n}\n","import random from 'random';\nimport { generateName, rollAllStats } from '../utils/randomHelpers';\nimport { loadGame } from './concerns/loadStorage';\n\nconst initialState = {\n  Traits: {\n    Name: '',\n    Race: 'Half Orc',\n    Class: 'Ur-Paladin',\n    Level: 1\n  },\n  Stats: {\n    STR: 0,\n    // \"best\":\"WIS\",\n    CON: 0,\n    DEX: 0,\n    INT: 0,\n    WIS: 0,\n    CHA: 0,\n    'HP Max': 0,\n    'MP Max': 0\n  }\n};\n\nconst STAT_NAMES = ['STR', 'CON', 'DEX', 'INT', 'WIS', 'CHA'];\n\nexport const getCharacterSheet = state => state.characterSheet;\n\nexport const getTraits = state => state.characterSheet.Traits;\n\nexport const getStats = state => state.characterSheet.Stats;\n\nconst roll = state => {\n  const newState = { ...state };\n\n  newState.Stats = rollAllStats(newState.Stats);\n  newState.Stats['HP Max'] = random.int(1, 8) + newState.Stats.CON.div(6);\n  newState.Stats['MP Max'] = random.int(1, 8) + newState.Stats.INT.div(6);\n\n  return newState;\n};\n\nconst levelUp = state => {\n  // TODO revisit immutablity here\n  const newState = { ...state };\n  newState.Traits.Level += 1;\n  newState.Stats['HP Max'] += newState.Stats.CON.div(3) + 1 + random.int(0, 4);\n  newState.Stats['MP Max'] += newState.Stats.INT.div(3) + 1 + random.int(0, 4);\n  const randStat1 = STAT_NAMES[random.int(0, STAT_NAMES.length - 1)];\n  const randStat2 = STAT_NAMES[random.int(0, STAT_NAMES.length - 1)];\n  newState.Stats[randStat1] += random.int(0, 3);\n  newState.Stats[randStat2] += random.int(0, 3);\n\n  return newState;\n};\n\nconst chooseClass = (state, value) => {\n  return { ...state, Traits: { ...state.Traits, Class: value } };\n};\n\nconst chooseRace = (state, value) => {\n  return { ...state, Traits: { ...state.Traits, Race: value } };\n};\n\nconst updateName = (state, value) => {\n  return { ...state, Traits: { ...state.Traits, Name: value } };\n};\n\nconst characterSheet = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ROLL':\n      return roll(state);\n    case 'GENERATE_NAME':\n      return updateName(state, generateName());\n    case 'LOAD_GAME':\n      return loadGame(state, 'characterSheet');\n    case 'LEVEL_UP':\n      return levelUp(state);\n    case 'CHOOSE_CLASS':\n      return chooseClass(state, action.value);\n    case 'CHOOSE_RACE':\n      return chooseRace(state, action.value);\n    case 'UPDATE_NAME':\n      return updateName(state, action.value);\n    default:\n      return state;\n  }\n};\n\nexport default characterSheet;\n","import { loadGame } from './concerns/loadStorage';\n\nconst initialState = {\n  Weapon: 'Stick',\n  Shield: '',\n  Helm: '',\n  Hauberk: 'Burlap',\n  Brassairts: '',\n  Vambraces: '',\n  Gauntlets: '',\n  Gambeson: '',\n  Cuisses: '',\n  Greaves: '',\n  Sollerets: ''\n}; // todo: make this an array so it's ordered\n\nexport const getEquipments = state => state.equipments;\n\nconst buy = (state, type, name) => {\n  const newState = { ...state };\n  newState[type] = name;\n  return newState;\n};\n\nconst equipments = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAME':\n      return loadGame(state, 'equipments');\n    case 'BUY':\n      return buy(state, action.equipType, action.value);\n    default:\n      return state;\n  }\n};\n\nexport default equipments;\n","import { loadGame } from './concerns/loadStorage';\n\nconst initialState = {\n  Act: 1\n};\n\nexport const getPlotDevelopment = state => state.plotDevelopment;\n\nconst completeAct = state => {\n  const newState = { ...state };\n  newState.Act += 1;\n\n  return newState;\n};\n\nconst plotDevelopment = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAME':\n      return loadGame(state, 'plotDevelopment');\n    case 'COMPLETE_ACT':\n      return completeAct(state);\n    default:\n      return state;\n  }\n};\n\nexport default plotDevelopment;\n","import { randomQuest } from '../utils/randomHelpers';\nimport { loadGame } from './concerns/loadStorage';\n\nconst initialState = [];\n\nexport const getQuests = state => state.quests;\n\nconst completeQuest = state => {\n  const newState = [...state];\n  newState.push(randomQuest());\n\n  return newState;\n};\n\nconst quests = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAME':\n      return loadGame(state, 'quests');\n    case 'COMPLETE_QUEST':\n      return completeQuest(state);\n    default:\n      return state;\n  }\n};\n\nexport default quests;\n","import { randomSpellBook } from '../utils/randomHelpers';\nimport { loadGame } from './concerns/loadStorage';\n\nconst initialState = [];\n\nexport const getSpellBook = state => state.spellBook;\n\nconst levelUp = state => {\n  const newState = [...state];\n  newState.push(randomSpellBook());\n\n  return newState;\n};\n\nconst spellBook = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAME':\n      return loadGame(state, 'spellBook');\n    case 'LEVEL_UP':\n      return levelUp(state);\n    default:\n      return state;\n  }\n};\n\nexport default spellBook;\n","export const humanizePosition = (position, total) => `${(position / total).toFixed(2) * 100}%`;\n\nexport const increment = (state, value) => {\n  const newState = { ...state };\n  newState.position += value || 1;\n\n  return newState;\n};\n","import { humanizePosition, increment } from '../concerns/bars';\nimport { loadGame } from '../concerns/loadStorage';\n\nconst TOTAL = 12;\n\nconst initialState = {\n  position: 0\n};\n\nexport const getPosition = state => humanizePosition(state.encumbranceBar.position, TOTAL);\n\nconst encumbranceBar = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAME':\n      return loadGame(state, 'encumbranceBar');\n    case 'LOOT':\n      return increment(state, 1);\n    case 'SELL_ONE':\n      return increment(state, -1);\n    default:\n      return state;\n  }\n};\n\nexport default encumbranceBar;\n","import { humanizePosition, increment } from '../concerns/bars';\nimport { loadGame } from '../concerns/loadStorage';\n\nconst initialState = {\n  position: 0,\n  total: 50\n};\n\nexport const getPosition = state =>\n  humanizePosition(state.experienceBar.position, state.experienceBar.total);\n\nconst levelUp = (state, total) => {\n  const newState = { ...state };\n  newState.position = 0;\n  newState.total = total;\n\n  return newState;\n};\n\nconst experienceBar = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAME':\n      return loadGame(state, 'experienceBar');\n    case 'LEVEL_UP':\n      return levelUp(state, action.total);\n    case 'INCREMENT_EXPERIENCE':\n      return increment(state, action.value);\n    default:\n      return state;\n  }\n};\n\nexport default experienceBar;\n","import { humanizePosition, increment } from '../concerns/bars';\nimport { loadGame } from '../concerns/loadStorage';\n\nconst initialState = {\n  position: 0,\n  total: 21600\n};\n\nexport const getPosition = state => humanizePosition(state.plotBar.position, state.plotBar.total);\n\nconst completeAct = state => {\n  const newState = { ...state };\n  newState.total = 60 * 60 * (1 + 5 * state.Act);\n\n  return newState;\n};\n\nconst plotBar = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAME':\n      return loadGame(state, 'plotBar');\n    case 'COMPLETE_ACT':\n      return completeAct(state);\n    case 'INCREMENT_PLOT':\n      return increment(state, action.value);\n    default:\n      return state;\n  }\n};\n\nexport default plotBar;\n","import random from 'random';\nimport { humanizePosition, increment } from '../concerns/bars';\nimport { loadGame } from '../concerns/loadStorage';\n\nconst initialState = {\n  position: 0,\n  total: 100\n};\n\nexport const getPosition = state => humanizePosition(state.questBar.position, state.questBar.total);\n\nconst completeQuest = state => {\n  const newState = { ...state };\n  newState.position = 0;\n  newState.total = 50 + random.int(1, 1000);\n\n  return newState;\n};\n\nconst questBar = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAME':\n      return loadGame(state, 'questBar');\n    case 'INCREMENT_QUEST':\n      return increment(state, action.value);\n    case 'COMPLETE_QUEST':\n      return completeQuest(state);\n    default:\n      return state;\n  }\n};\n\nexport default questBar;\n","import { humanizePosition, increment } from '../concerns/bars';\nimport { loadGame } from '../concerns/loadStorage';\n\nconst TOTAL = 100; // change to 20\n\nconst initialState = {\n  position: 0,\n  task: '',\n  taskType: 'kill',\n  monster: { name: 'Violet Fungi', level: '3', loot: 'spore' }\n};\n\nexport const getPosition = state => humanizePosition(state.taskBar.position, TOTAL);\n\nexport const getTask = state => state.taskBar.task;\n\nconst nextTask = (state, text, taskType, monster) => {\n  const newState = { ...state };\n  newState.position = 0;\n  newState.task = text;\n  newState.taskType = taskType;\n  if (monster) newState.monster = monster;\n\n  return newState;\n};\n\nconst taskBar = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_GAME':\n      return loadGame(state, 'taskBar');\n    case 'INCREMENT_TASK':\n      return increment(state);\n    case 'NEXT_TASK':\n      return nextTask(state, action.text, action.taskType, action.monster);\n    default:\n      return state;\n  }\n};\n\nexport default taskBar;\n","import { combineReducers } from 'redux';\nimport inventory from './inventory';\nimport characterSheet from './characterSheet';\nimport equipments from './equipments';\nimport plotDevelopment from './plotDevelopment';\nimport quests from './quests';\nimport spellBook from './spellBook';\nimport encumbranceBar from './bars/encumbranceBar';\nimport experienceBar from './bars/experienceBar';\nimport plotBar from './bars/plotBar';\nimport questBar from './bars/questBar';\nimport taskBar from './bars/taskBar';\n\nexport default combineReducers({\n  inventory,\n  characterSheet,\n  equipments,\n  plotDevelopment,\n  quests,\n  spellBook,\n  encumbranceBar,\n  experienceBar,\n  plotBar,\n  questBar,\n  taskBar\n});\n","import React from 'react';\nimport { Box, Grid, Button, Text, Menu } from 'grommet';\nimport { gameDataList } from '../utils/storage';\n\nconst GameTitle = () => {\n  const gameData = gameDataList();\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}\n    >\n      <Grid\n        areas={[\n          { name: 'title', start: [0, 0], end: [1, 0] },\n          { name: 'new', start: [0, 1], end: [0, 1] },\n          { name: 'continue', start: [1, 1], end: [1, 1] }\n        ]}\n        columns={['1/2', '1/2']}\n        rows={['auto', 'auto']}\n        gap=\"xlarge\"\n      >\n        <Box gridArea=\"title\" align=\"center\" animation=\"pulse\" style={{}}>\n          <Text style={{ fontSize: 96 }}>Progress Quest</Text>\n        </Box>\n        <Box gridArea=\"new\" align=\"center\">\n          <Button\n            label={<Text style={{ fontSize: 24 }}>New Game</Text>}\n            onClick={() => {\n              window.location.href = '/new';\n            }}\n            style={{ marginTop: '9px' }}\n            plain\n          />\n        </Box>\n        <Box gridArea=\"continue\" align=\"center\">\n          <Menu\n            label={<Text style={{ fontSize: 24 }}>Continue</Text>}\n            items={gameData.map(e => ({\n              label: e,\n              href: `game/${e}`\n            }))}\n            icon={false}\n            disabled={gameData.length === 0}\n          />\n        </Box>\n      </Grid>\n    </div>\n  );\n};\n\nexport default GameTitle;\n","const theme = {\n  dark: true,\n  global: {\n    colors: {\n      brand: '#773421',\n      'accent-1': '#efac28',\n      'accent-2': '#7fffd4',\n      dark: '#2a1d0d',\n      text: {\n        light: '#1f240a',\n        dark: '#efd8a1'\n      }\n    },\n    //  \"input\":{\n    //     \"border\":{\n    //        \"radius\":\"4px\"\n    //     }\n    //  },\n    font: {\n      // family: \"'Bahianita', cursive\",\n      family: \"'Metal Mania', cursive;\",\n      size: '12px',\n      height: '20px'\n    }\n  },\n  radioButton: {\n    size: '15px'\n  }\n\n  // \"button\":{\n  //    \"border\":{\n  //       \"radius\":\"4px\"\n  //    }\n  // },\n  // \"checkBox\":{\n  //    \"border\":{\n  //       \"radius\":\"4px\"\n  //    }\n  // },\n  // \"layer\":{\n  //    \"border\":{\n  //       \"radius\":\"4px\"\n  //    }\n  // }\n};\n\n// const theme = {\n//   global: {\n//     font: {\n//       family: \"'Bahianita', cursive\",\n//       size: '12px',\n//       height: '20px',\n//     },\n//     backgroundImage: `url(${Background})`, //remove this\n//     edgeSize: {\n//       padding: '1px'\n//     },\n//     colors: {\n//       brand: '#773421',\n//       // black: '#efd8a1',\n//       text: {\n//         light:'#efd8a1',\n//         dark:'#efd8a1'\n//       }\n//     }\n//   },\n//   radioButton: {\n//     size: '15px',\n//   },\n//   table: {\n//     extend: 'font-size: 5px',\n//   },\n// };\n\nexport default theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport theme from '../../theme';\n\nconst styles = {\n  box: {\n    border: '3px solid',\n    borderColor: theme.global.colors['accent-1'],\n    borderRadius: '10px',\n    textAlign: 'left'\n  },\n  title: {\n    backgroundColor: theme.global.colors.dark,\n    position: 'relative',\n    top: -12,\n    left: 15,\n    display: 'inline-block',\n    padding: '0 6px'\n  },\n  body: {\n    margin: '10px'\n  }\n};\n\nconst BoxWithTitle = ({ title, children }) => (\n  <div style={styles.box}>\n    <div style={styles.title}>{title}</div>\n    <div style={styles.body}>{children}</div>\n  </div>\n);\n\nBoxWithTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.array.isRequired\n};\n\nexport default BoxWithTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, TableBody, TableCell, TableHeader, TableRow, Text } from 'grommet';\n\nconst styles = {\n  text: {\n    fontSize: '12px',\n    lineHeight: '15px'\n  }\n};\n\nconst TextWraper = ({ children }) => <Text style={styles.text}>{children}</Text>;\n\nconst GameTable = ({ data, columns, hasHeader }) => {\n  return (\n    <Table>\n      {hasHeader && (\n        <TableHeader>\n          <TableRow>\n            {columns.map(c => (\n              <TableCell\n                key={c.property}\n                scope=\"col\"\n                border=\"bottom\"\n                size=\"medium\"\n                style={{ padding: '2px' }}\n              >\n                <TextWraper>{c.label}</TextWraper>\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHeader>\n      )}\n      <TableBody>\n        {data.map((datum, i) => (\n          <TableRow key={`row-${i}`}>\n            {columns.map(c => (\n              <TableCell\n                key={c.property}\n                scope={c.dataScope}\n                align={c.align}\n                style={{ padding: '2px' }}\n              >\n                <TextWraper>{c.format ? c.format(datum) : datum[c.property]}</TextWraper>\n              </TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nTextWraper.propTypes = {\n  children: PropTypes.string.isRequired\n};\n\nGameTable.defaultProps = {\n  hasHeader: true\n};\n\nGameTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      property: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  hasHeader: PropTypes.bool\n};\n\nexport default GameTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GameTable from '../shared/GameTable';\n\nconst COLUMNS = [\n  {\n    property: 'trait',\n    label: 'Trait'\n  },\n  {\n    property: 'value',\n    label: 'Value'\n  }\n];\n\nconst TraitsTable = ({ traits }) => {\n  const data = Object.keys(traits).map(key => ({\n    trait: key,\n    value: traits[key]\n  }));\n\n  return <GameTable data={data} columns={COLUMNS} hasHeader />;\n};\n\nTraitsTable.propTypes = {\n  traits: PropTypes.object.isRequired\n};\n\nexport default TraitsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GameTable from '../shared/GameTable';\n\nconst COLUMNS = [\n  {\n    property: 'stat',\n    label: 'Stat'\n  },\n  {\n    property: 'value',\n    label: 'Value'\n  }\n];\n\nconst StatsTable = ({ stats }) => {\n  const data = Object.keys(stats)\n    .filter(e => e !== 'seed')\n    .map(key => ({\n      stat: key,\n      value: stats[key]\n    }));\n\n  return <GameTable data={data} columns={COLUMNS} hasHeader />;\n};\n\nStatsTable.propTypes = {\n  stats: PropTypes.object.isRequired\n};\n\nexport default StatsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport theme from '../../theme';\n\nconst styles = {\n  container: {\n    border: '4px solid',\n    borderRadius: '10px',\n    borderColor: theme.global.colors['accent-1']\n  },\n  progress: {\n    backgroundColor: theme.global.colors['accent-2'],\n    width: '0%',\n    height: '11px',\n    border: '0px solid #7fffd4',\n    borderRadius: '3px'\n  }\n};\n\nconst ProgressBar = ({ width }) => (\n  <div style={styles.container}>\n    <div style={{ ...styles.progress, width }} />\n  </div>\n);\n\nProgressBar.propTypes = {\n  width: PropTypes.string.isRequired\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from '../shared/ProgressBar';\n\nconst ExperienceBar = ({ width }) => {\n  return <ProgressBar width={width} />;\n};\n\nExperienceBar.propTypes = {\n  width: PropTypes.string.isRequired\n};\n\nexport default ExperienceBar;\n","import React from 'react';\nimport { Grid, Box } from 'grommet';\nimport PropTypes from 'prop-types';\nimport BoxWithTitle from '../shared/BoxWithTitle';\nimport TraitsTable from './TraitsTable';\nimport StatsTable from './StatsTable';\nimport ExperienceBar from './ExperienceBar';\n\nconst CharacterSheet = ({ characterSheet, experience }) => (\n  <Grid\n    areas={[\n      { name: 'table', start: [0, 0], end: [0, 0] },\n      { name: 'xp', start: [0, 1], end: [0, 1] }\n    ]}\n    columns={['flex']}\n    rows={['flex', '45px']}\n    gap=\"small\"\n  >\n    <BoxWithTitle gridArea=\"table\" title=\"Character Sheet\">\n      <TraitsTable traits={characterSheet.Traits} />\n      <p />\n      <StatsTable stats={characterSheet.Stats} />\n    </BoxWithTitle>\n    <Box gridArea=\"xp\">\n      <div>Experience</div>\n      <ExperienceBar width={experience} />\n    </Box>\n  </Grid>\n);\n\nCharacterSheet.propTypes = {\n  characterSheet: PropTypes.shape({\n    Stats: PropTypes.shape({\n      CHA: PropTypes.number.isRequired,\n      CON: PropTypes.number.isRequired,\n      DEX: PropTypes.number.isRequired,\n      'HP Max': PropTypes.number.isRequired,\n      INT: PropTypes.number.isRequired,\n      'MP Max': PropTypes.number.isRequired,\n      STR: PropTypes.number.isRequired,\n      WIS: PropTypes.number.isRequired\n    }).isRequired,\n    Traits: PropTypes.shape({\n      Class: PropTypes.string.isRequired,\n      Level: PropTypes.number.isRequired,\n      Name: PropTypes.string.isRequired,\n      Race: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  experience: PropTypes.string.isRequired\n};\n\nexport default CharacterSheet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCharacterSheet } from '../reducers/characterSheet';\nimport { getPosition } from '../reducers/bars/experienceBar';\nimport CharacterSheet from '../components/CharacterSheet/index';\n\nconst CharacterSheetContainer = ({ characterSheet, experience }) => (\n  // eslint-disable-next-line react/jsx-filename-extension\n  <CharacterSheet characterSheet={characterSheet} experience={experience} />\n);\n\nCharacterSheetContainer.propTypes = {\n  characterSheet: PropTypes.object.isRequired,\n  experience: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  characterSheet: getCharacterSheet(state),\n  experience: getPosition(state)\n});\n\nexport default connect(mapStateToProps)(CharacterSheetContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Grid } from 'grommet';\nimport BoxWithTitle from './shared/BoxWithTitle';\nimport ProgressBar from './shared/ProgressBar';\nimport GameTable from './shared/GameTable';\n\nconst COLUMNS = [\n  {\n    property: 'item',\n    label: 'Item'\n  },\n  {\n    property: 'qty',\n    label: 'Qty'\n  }\n];\n\nconst InventoryTable = props => {\n  const data = props.items.map(function(value) {\n    return {\n      item: value.name,\n      qty: value.quantity\n    };\n  });\n\n  return <GameTable data={data} columns={COLUMNS} hasHeader />;\n};\n\nconst Inventory = ({ inventory, encumbrance }) => (\n  <Grid\n    areas={[\n      { name: 'table', start: [0, 0], end: [0, 0] },\n      { name: 'tracking', start: [0, 1], end: [0, 1] }\n    ]}\n    columns={['flex']}\n    rows={['flex', '30px']}\n    gap=\"small\"\n  >\n    <BoxWithTitle gridArea=\"table\" title=\"Inventory\">\n      <InventoryTable items={inventory} />\n    </BoxWithTitle>\n    <Box gridArea=\"tracking\">\n      <div>Encumbrance</div>\n      <ProgressBar width={encumbrance} />\n    </Box>\n  </Grid>\n);\n\nInventory.propTypes = {\n  inventory: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      quantity: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  encumbrance: PropTypes.string.isRequired\n};\n\nexport default Inventory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getInventory } from '../reducers/inventory';\nimport { getPosition } from '../reducers/bars/encumbranceBar';\nimport Inventory from '../components/Inventory';\n\nconst InventoryContainer = ({ inventory, encumbrance }) => (\n  // eslint-disable-next-line react/jsx-filename-extension\n  <Inventory inventory={inventory} encumbrance={encumbrance} />\n);\n\nInventoryContainer.propTypes = {\n  inventory: PropTypes.array.isRequired,\n  encumbrance: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  inventory: getInventory(state),\n  encumbrance: getPosition(state)\n});\n\nexport default connect(mapStateToProps)(InventoryContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BoxWithTitle from './shared/BoxWithTitle';\nimport GameTable from './shared/GameTable';\n\nconst COLUMNS = [\n  {\n    property: 'category'\n  },\n  {\n    property: 'name'\n  }\n];\n\nconst EquipmentTable = ({ equipments }) => {\n  const data = Object.keys(equipments).map(key => ({\n    category: key,\n    name: equipments[key]\n  }));\n\n  return <GameTable data={data} columns={COLUMNS} hasHeader={false} />;\n};\n\nconst Equipments = ({ equipments }) => (\n  <BoxWithTitle gridArea=\"table\" title=\"Equipments\">\n    <EquipmentTable equipments={equipments} />\n  </BoxWithTitle>\n);\n\nEquipmentTable.propTypes = {\n  equipments: PropTypes.shape({\n    Weapon: PropTypes.string.isRequired,\n    Shield: PropTypes.string.isRequired,\n    Helm: PropTypes.string.isRequired,\n    Hauberk: PropTypes.string.isRequired,\n    Brassairts: PropTypes.string.isRequired,\n    Vambraces: PropTypes.string.isRequired,\n    Gauntlets: PropTypes.string.isRequired,\n    Gambeson: PropTypes.string.isRequired,\n    Cuisses: PropTypes.string.isRequired,\n    Greaves: PropTypes.string.isRequired,\n    Sollerets: PropTypes.string.isRequired\n  }).isRequired\n};\n\nEquipments.propTypes = { equipments: PropTypes.array.isRequired };\n\nexport default Equipments;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getEquipments } from '../reducers/equipments';\nimport Equipments from '../components/Equipments';\n\n// eslint-disable-next-line react/jsx-filename-extension\nconst EquipmentContainer = ({ equipments }) => <Equipments equipments={equipments} />;\n\nEquipmentContainer.propTypes = {\n  equipments: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  equipments: getEquipments(state)\n});\n\nexport default connect(mapStateToProps)(EquipmentContainer);\n","import React from 'react';\nimport { Box, Grid, CheckBox } from 'grommet';\nimport romanize from 'romanize';\nimport PropTypes from 'prop-types';\nimport BoxWithTitle from './shared/BoxWithTitle';\nimport ProgressBar from './shared/ProgressBar';\n\nconst range = (start, end) => {\n  const length = end - start + 1;\n  return Array.from({ length }, (_, i) => start + i);\n}; // use _.takeRight(arr, 5);\n\nconst PlotDevelopment = ({ plotDevelopment, plotProgress }) => (\n  <Grid\n    areas={[\n      { name: 'table', start: [0, 0], end: [0, 0] },\n      { name: 'tracking', start: [0, 1], end: [0, 1] }\n    ]}\n    columns={['flex']}\n    rows={['flex', '25px']}\n    gap=\"small\"\n  >\n    <BoxWithTitle gridArea=\"table\" title=\"Plot Development\">\n      <CheckBox checked label=\"Prologue\" style={{ margin: '2px 0px' }} />\n      {range(1, plotDevelopment.Act).map((e, i) => (\n        <CheckBox\n          key={`pd-${i}`}\n          checked={e !== plotDevelopment.Act}\n          label={`Act ${romanize(e)}`}\n          style={{ margin: '2px 0px' }}\n        />\n      ))}\n    </BoxWithTitle>\n    <Box gridArea=\"tracking\">\n      <ProgressBar width={plotProgress} />\n    </Box>\n  </Grid>\n);\n\nPlotDevelopment.propTypes = {\n  plotDevelopment: PropTypes.arrayOf(\n    PropTypes.shape({\n      Act: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  plotProgress: PropTypes.string.isRequired\n};\n\nexport default PlotDevelopment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPlotDevelopment } from '../reducers/plotDevelopment';\nimport { getPosition } from '../reducers/bars/plotBar';\nimport PlotDevelopment from '../components/PlotDevelopment';\n\nconst PlotDevelopmentContainer = ({ plotDevelopment, plotProgress }) => (\n  // eslint-disable-next-line react/jsx-filename-extension\n  <PlotDevelopment plotDevelopment={plotDevelopment} plotProgress={plotProgress} />\n);\n\nPlotDevelopmentContainer.propTypes = {\n  plotDevelopment: PropTypes.object.isRequired,\n  plotProgress: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  plotDevelopment: getPlotDevelopment(state),\n  plotProgress: getPosition(state)\n});\n\nexport default connect(mapStateToProps)(PlotDevelopmentContainer);\n","import React from 'react';\nimport { Box, Grid, CheckBox } from 'grommet';\nimport PropTypes from 'prop-types';\n\nimport BoxWithTitle from './shared/BoxWithTitle';\nimport ProgressBar from './shared/ProgressBar';\n\nconst DISPLAY_MAX = 10;\n\nconst styles = {\n  checkBox: {\n    margin: '2px 0px'\n  }\n};\n\nconst displayArray = array =>\n  array.length > DISPLAY_MAX ? array.slice(Math.max(DISPLAY_MAX - 10, 1)) : array;\n\nconst Quests = ({ quests, questProgress }) => {\n  const array = displayArray(quests);\n\n  return (\n    <Grid\n      areas={[\n        { name: 'table', start: [0, 0], end: [0, 0] },\n        { name: 'tracking', start: [0, 1], end: [0, 1] }\n      ]}\n      columns={['flex']}\n      rows={['flex', '13px']}\n      gap=\"small\"\n    >\n      <BoxWithTitle gridArea=\"table\" title=\"Quests\">\n        {array.map((e, i) => (\n          <CheckBox\n            checked={i < array.length - 1}\n            label={e}\n            style={styles.checkBox}\n            key={`quest-${i}`}\n          />\n        ))}\n      </BoxWithTitle>\n      <Box gridArea=\"tracking\">\n        <ProgressBar width={questProgress} />\n      </Box>\n    </Grid>\n  );\n};\n\nQuests.propTypes = {\n  quests: PropTypes.arrayOf(PropTypes.string).isRequired,\n  questProgress: PropTypes.string.isRequired\n};\n\nexport default Quests;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getQuests } from '../reducers/quests';\nimport { getPosition } from '../reducers/bars/questBar';\nimport Quests from '../components/Quests';\n\nconst QuestsContainer = ({ quests, questProgress }) => (\n  // eslint-disable-next-line react/jsx-filename-extension\n  <Quests quests={quests} questProgress={questProgress} />\n);\n\nQuestsContainer.propTypes = {\n  quests: PropTypes.array.isRequired,\n  questProgress: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  quests: getQuests(state),\n  questProgress: getPosition(state)\n});\n\nexport default connect(mapStateToProps)(QuestsContainer);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport BoxWithTitle from './shared/BoxWithTitle';\nimport GameTable from './shared/GameTable';\n\nconst COLUMNS = [\n  {\n    property: 'spell',\n    label: 'spell'\n  },\n  {\n    property: 'level',\n    label: 'level'\n  }\n];\n\nconst SpellBookTable = ({ spellBook }) => {\n  const data = spellBook.map(value => ({\n    spell: value[0],\n    level: value[1]\n  }));\n  return <GameTable data={data} columns={COLUMNS} hasHeader />;\n};\n\nconst SpellBook = ({ spellBook }) => (\n  <BoxWithTitle gridArea=\"table\" title=\"Spell Book\">\n    <SpellBookTable spellBook={spellBook} />\n  </BoxWithTitle>\n);\n\nSpellBook.propTypes = {\n  spellBook: PropTypes.array.isRequired\n};\n\nSpellBookTable.propTypes = {\n  spellBook: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired\n};\n\nexport default SpellBook;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getSpellBook } from '../reducers/spellBook';\nimport SpellBook from '../components/SpellBook';\n\n// eslint-disable-next-line react/jsx-filename-extension\nconst SpellBookContainer = ({ spellBook }) => <SpellBook spellBook={spellBook} />;\n\nSpellBookContainer.propTypes = {\n  spellBook: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  spellBook: getSpellBook(state)\n});\n\nexport default connect(mapStateToProps)(SpellBookContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getQuests } from '../reducers/quests';\nimport { getPosition, getTask } from '../reducers/bars/taskBar';\nimport Quests from '../components/Quests';\nimport ProgressBar from '../components/shared/ProgressBar';\n\nconst TaskContainer = ({ taskProgress, task }) => (\n  <div>\n    <div>{task}</div>\n    <ProgressBar width={taskProgress} />\n  </div>\n);\n\n// InventoryContainer.propTypes = {\n//   inventory: PropTypes.arrayOf(PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     quantity: PropTypes.number.isRequired,\n//   })).isRequired,\n// }\n\nconst mapStateToProps = state => ({\n  taskProgress: getPosition(state),\n  task: getTask(state)\n});\n\nexport default connect(\n  mapStateToProps\n  // {checkout}\n)(TaskContainer);\n","export const getMain = state => state;\n\nconst isEncumbranceFull = state => state.encumbranceBar.position >= 11;\n\nconst isExperienceBarFull = state => state.experienceBar.position >= state.experienceBar.total - 1;\n\nconst isPlotBarFull = state => state.plotBar.position >= state.plotBar.total - 1;\n\nconst isQuestBarFull = state => state.questBar.position >= state.questBar.total - 1;\n\nconst isTaskBarFull = state => state.taskBar.position > 100;\n\nconst currentTaskType = state => state.taskBar.taskType;\n\nconst currentTaskMonster = state => state.taskBar.monster;\n\nconst isInventoryEmpty = state => state.inventory.length <= 1; // gold does not count\n\nconst getLevel = state => state.characterSheet.Traits.Level;\n\nconst getGold = state => state.inventory[0].quantity;\n\nconst nextEquipmentPrice = state =>\n  5 * getLevel(state) * getLevel(state) + 10 * getLevel(state) + 20;\n\nconst currentMonsterLoot = state =>\n  `${state.taskBar.monster.name.toLowerCase()} ${state.taskBar.monster.loot}`;\n\nconst nextLevelUpTime = state => 20 * (getLevel(state) + 1) * 60;\n\nexport const helpers = {\n  isEncumbranceFull,\n  isExperienceBarFull,\n  isPlotBarFull,\n  isQuestBarFull,\n  isTaskBarFull,\n  currentTaskType,\n  currentTaskMonster,\n  isInventoryEmpty,\n  nextEquipmentPrice,\n  getGold,\n  currentMonsterLoot,\n  nextLevelUpTime\n};\n","import random from 'random';\nimport { SpecialItem, randomEquip, randomeMonsterTask } from '../utils/randomHelpers';\n\nconst completeTask = (\n  data,\n  nextTask,\n  loot,\n  buy,\n  sellOne,\n  {\n    isEncumbranceFull,\n    currentTaskType,\n    currentTaskMonster,\n    isInventoryEmpty,\n    nextEquipmentPrice,\n    getGold,\n    currentMonsterLoot\n  }\n) => {\n  const taskType = currentTaskType(data);\n  if (taskType == 'kill') {\n    if (currentTaskMonster(data).loot === '*') {\n      loot(SpecialItem());\n    } else {\n      loot(currentMonsterLoot(data));\n    }\n  } else if (taskType == 'buying') {\n    const equips = randomEquip();\n    buy(equips.type, equips.name, nextEquipmentPrice(data));\n  } else if (taskType == 'market' || taskType == 'sell') {\n    if (!isInventoryEmpty(data) && taskType == 'sell') {\n      let amt = data.inventory[1].quantity * data.characterSheet.Traits.Level;\n\n      if (data.inventory[1].name.includes(' of ')) {\n        amt *= (1 + random.int(1, 10)) * (1 + random.int(1, data.characterSheet.Traits.level));\n      }\n      sellOne(amt);\n    }\n\n    if (data.inventory.length > 2) {\n      nextTask(`Selling ${data.inventory[2].name}`, 'sell');\n      return 0;\n    }\n  }\n  if (isEncumbranceFull(data)) {\n    nextTask(`Heading to market to sell loot`, 'market');\n    return 0;\n  }\n  if (\n    taskType != 'kill' &&\n    taskType != 'heading'\n    // (Pos('kill|', old) <= 0) && (old != 'heading')\n  ) {\n    if (getGold(data) > nextEquipmentPrice(data)) {\n      nextTask(`Negotiating purchase of better equipment`, 'buying');\n      return 0;\n    }\n    nextTask(`Heading to the killing fields`, 'heading');\n    return 0;\n  }\n  const result = randomeMonsterTask(data.characterSheet.Traits.Level);\n  nextTask(`Executing ${result.text}`, 'kill', result.monster);\n\n  //     var nn = GetI(Traits, 'Level');\n  //     var t = MonsterTask(nn);\n  //     var InventoryLabelAlsoGameStyleTag = 3;\n  //     nn = Math.floor((2 * InventoryLabelAlsoGameStyleTag * t.level * 1000) / nn);\n  //     Task('Executing ' + t.description, nn);\n};\n\nexport default completeTask;\n","import delay from 'delay';\nimport completeTask from './completeTask';\nimport { save } from '../utils/storage';\n\nconst delayedCall = async action => {\n  await delay(100);\n  action();\n};\n\nconst start = async ({\n  data,\n  incrementTask,\n  levelUp,\n  completeQuest,\n  completePlot,\n  nextTask,\n  incrementExperience,\n  incrementQuest,\n  incrementPlot,\n  loot,\n  buy,\n  sellOne,\n  helpers\n}) => {\n  const {\n    isExperienceBarFull,\n    isPlotBarFull,\n    isQuestBarFull,\n    isTaskBarFull,\n    currentTaskType,\n    nextLevelUpTime\n  } = helpers;\n\n  if (isTaskBarFull(data)) {\n    if (isExperienceBarFull(data)) {\n      levelUp(nextLevelUpTime(data));\n    } else if (currentTaskType(data) === 'kill') {\n      incrementExperience(1);\n    }\n    if (currentTaskType(data) === 'kill' || currentTaskType(data) === 'heading') {\n      if (isQuestBarFull(data) || data.quests.length === 0) {\n        completeQuest();\n      } else {\n        incrementQuest(1);\n      }\n\n      if (isPlotBarFull(data)) {\n        completePlot();\n      } else {\n        incrementPlot(1);\n      }\n    }\n\n    completeTask(data, nextTask, loot, buy, sellOne, helpers);\n  } else {\n    delayedCall(incrementTask);\n  }\n  save(data);\n};\n\nexport default start;\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { Box, Grid } from 'grommet';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport CharacterSheetContainer from './CharacterSheetContainer';\nimport InventoryContainer from './InventoryContainer';\nimport EquipmentsContainer from './EquipmentsContainer';\nimport PlotDevelopmentContainer from './PlotDevelopmentContainer';\nimport QuestsContainer from './QuestsContainer';\nimport SpellBookContainer from './SpellBookContainer';\nimport TaskBarContainer from './TaskBarContainer';\nimport { getMain, helpers } from '../reducers/helpers/main';\n\nimport start from '../gameEngine';\nimport {\n  loadGame,\n  incrementTask,\n  levelUp,\n  completeQuest,\n  completePlot,\n  nextTask,\n  incrementExperience,\n  incrementQuest,\n  incrementPlot,\n  loot,\n  buy,\n  sellOne\n} from '../actions';\n\nconst MainContainer = props => {\n  useEffect(() => {\n    if (!props.data.characterSheet.Traits.Name) {\n      props.loadGame();\n    }\n\n    try {\n      start(props);\n    } catch (_err) {\n      // eslint-disable-next-line no-undef\n      window.location.reload();\n    }\n  });\n\n  return (\n    // eslint-disable-next-line react/jsx-filename-extension\n    <Grid\n      areas={[\n        { name: 'top', start: [0, 0], end: [2, 0] },\n        { name: 'character-sheet', start: [0, 1], end: [0, 1] },\n        { name: 'equipment', start: [1, 1], end: [1, 1] },\n        { name: 'plot-development', start: [2, 1], end: [2, 1] },\n        { name: 'spell-book', start: [0, 2], end: [0, 2] },\n        { name: 'inventory', start: [1, 2], end: [1, 2] },\n        { name: 'quests', start: [2, 2], end: [2, 2] },\n        { name: 'status', start: [0, 3], end: [2, 3] }\n      ]}\n      columns={['1/3', '1/3', '1/3']}\n      rows={['xxsmall', 'medium', 'medium', 'small']}\n      gap=\"small\"\n      id=\"main\"\n    >\n      <Box gridArea=\"top\">\n        <h1>Progress Quest</h1>\n      </Box>\n      <CharacterSheetContainer gridArea=\"character-sheet\" justify=\"stretch\" />\n      <EquipmentsContainer gridArea=\"equipment\" background=\"brand\" />\n      <PlotDevelopmentContainer gridArea=\"plot-development\" background=\"brand\" />\n      <SpellBookContainer gridArea=\"spell-book\" background=\"accent-1\" />\n      <InventoryContainer gridArea=\"inventory\" />\n      <QuestsContainer gridArea=\"quests\" background=\"accent-1\" />\n      <Box gridArea=\"status\">\n        <TaskBarContainer />\n      </Box>\n    </Grid>\n  );\n};\n\n/* eslint-disable react/no-unused-prop-types */\nMainContainer.propTypes = {\n  data: PropTypes.object.isRequired,\n  helpers: PropTypes.object.isRequired,\n  loadGame: PropTypes.func.isRequired,\n  incrementTask: PropTypes.func.isRequired,\n  levelUp: PropTypes.func.isRequired,\n  completeQuest: PropTypes.func.isRequired,\n  completePlot: PropTypes.func.isRequired,\n  nextTask: PropTypes.func.isRequired,\n  incrementExperience: PropTypes.func.isRequired,\n  incrementQuest: PropTypes.func.isRequired,\n  incrementPlot: PropTypes.func.isRequired,\n  loot: PropTypes.func.isRequired,\n  buy: PropTypes.func.isRequired,\n  sellOne: PropTypes.func.isRequired\n};\n/* eslint-enable react/no-unused-prop-types */\n\nconst mapStateToProps = state => ({\n  data: getMain(state),\n  helpers\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadGame,\n    incrementTask,\n    levelUp,\n    completeQuest,\n    completePlot,\n    nextTask,\n    incrementExperience,\n    incrementQuest,\n    incrementPlot,\n    loot,\n    buy,\n    sellOne\n  }\n)(MainContainer);\n","// import * as types from '../constants/ActionTypes'\n\nconst ROLL = 'ROLL';\nconst SOLD = 'SOLD';\nconst GENERATE_NAME = 'GENERATE_NAME';\nconst LOAD_GAME = 'LOAD_GAME';\nconst LEVEL_UP = 'LEVEL_UP';\nconst COMPLETE_QUEST = 'COMPLETE_QUEST';\nconst COMPLETE_PLOT = 'COMPLETE_PLOT';\nconst INCREMENT_TASK = 'INCREMENT_TASK';\nconst INCREMENT_EXPERIENCE = 'INCREMENT_EXPERIENCE';\nconst INCREMENT_QUEST = 'INCREMENT_QUEST';\nconst INCREMENT_PLOT = 'INCREMENT_PLOT';\nconst NEXT_TASK = 'NEXT_TASK';\nconst LOOT = 'LOOT';\nconst BUY = 'BUY';\nconst SELL_ONE = 'SELL_ONE';\n\nconst CHOOSE_CLASS = 'CHOOSE_CLASS';\nconst CHOOSE_RACE = 'CHOOSE_RACE';\nconst UPDATE_NAME = 'UPDATE_NAME';\n\nexport const generateName = () => ({\n  type: GENERATE_NAME\n});\n\nexport const roll = () => ({\n  type: ROLL\n});\n\nexport const loadGame = () => ({\n  type: LOAD_GAME\n});\n\nexport const levelUp = total => ({\n  type: LEVEL_UP,\n  total\n});\n\nexport const completeQuest = () => ({\n  type: COMPLETE_QUEST\n});\n\nexport const completePlot = () => ({\n  type: COMPLETE_PLOT\n});\n\nexport const nextTask = (text, taskType, monster) => ({\n  type: NEXT_TASK,\n  text,\n  taskType,\n  monster\n});\n\nexport const incrementTask = () => ({\n  type: INCREMENT_TASK\n});\n\nexport const incrementExperience = value => ({\n  type: INCREMENT_EXPERIENCE,\n  value\n});\n\nexport const incrementQuest = value => ({\n  type: INCREMENT_QUEST,\n  value\n});\n\nexport const incrementPlot = value => ({\n  type: INCREMENT_PLOT,\n  value\n});\n\nexport const loot = value => ({\n  type: LOOT,\n  value\n});\n\nexport const buy = (equipType, value, price) => ({\n  type: BUY,\n  equipType,\n  value,\n  price\n});\n\nexport const sellOne = price => ({\n  type: SELL_ONE,\n  price\n});\n\nexport const chooseClass = value => ({\n  type: CHOOSE_CLASS,\n  value\n});\n\nexport const chooseRace = value => ({\n  type: CHOOSE_RACE,\n  value\n});\n\nexport const updateName = value => ({\n  type: UPDATE_NAME,\n  value\n});\n","import { save } from '../../utils/storage';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const sold = state => {\n  return () => {\n    save(state);\n    // eslint-disable-next-line no-undef\n    window.location.href = `/game/${state.characterSheet.Traits.Name}`;\n  };\n};\n","import React from 'react';\nimport { Button } from 'grommet';\nimport PropTypes from 'prop-types';\nimport BoxWithTitle from '../shared/BoxWithTitle';\n\nconst StatsGeneration = ({ stats, onRoll, onSold }) => {\n  return (\n    <BoxWithTitle title=\"Stats\">\n      <div style={{ marginLeft: '20px' }}>\n        <p>{`STR: ${stats.STR}`}</p>\n        <p>{`CON: ${stats.CON}`}</p>\n        <p>{`DEX: ${stats.DEX}`}</p>\n        <p>{`INT: ${stats.INT}`}</p>\n        <p>{`WIS: ${stats.WIS}`}</p>\n        <p>{`CHA: ${stats.CHA}`}</p>\n        <p>{`HP Max: ${stats['HP Max']}`}</p>\n        <p>{`MP Max: ${stats['MP Max']}`}</p>\n      </div>\n      <div style={{ marginTop: '30px' }}>\n        <Button label=\"Roll\" onClick={onRoll} style={{ marginLeft: '12px' }} />\n        <Button label=\"Sold\" onClick={onSold} style={{ marginLeft: '15px' }} />\n      </div>\n    </BoxWithTitle>\n  );\n};\n\nStatsGeneration.propTypes = {\n  stats: PropTypes.object.isRequired,\n  onRoll: PropTypes.func.isRequired,\n  onSold: PropTypes.func.isRequired\n};\n\nexport default StatsGeneration;\n","import React from 'react';\nimport { TextInput, Button, Box, Grid } from 'grommet';\nimport PropTypes from 'prop-types';\n\nconst NameGeneration = ({ name, onUpdate, onGenerateName }) => {\n  return (\n    <Grid\n      areas={[\n        { name: 'input', start: [0, 0], end: [0, 0] },\n        { name: 'button', start: [1, 0], end: [1, 0] }\n      ]}\n      columns={['medium', 'xsmall']}\n      rows={['xxsmall']}\n      gap=\"medium\"\n    >\n      <Box gridArea=\"input\">\n        <TextInput value={name} onChange={event => onUpdate(event.target.value)} />\n      </Box>\n      <Box gridArea=\"button\">\n        <Button label=\"?\" onClick={onGenerateName} />\n      </Box>\n    </Grid>\n  );\n};\n\nNameGeneration.propTypes = {\n  name: PropTypes.string.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onGenerateName: PropTypes.func.isRequired\n};\n\nexport default NameGeneration;\n","import React from 'react';\nimport { Box, RadioButton } from 'grommet';\nimport PropTypes from 'prop-types';\nimport BoxWithTitle from '../shared/BoxWithTitle';\n\nconst RaceSelection = ({ selected, onSelect }) => {\n  return (\n    <BoxWithTitle title=\"Select Race\">\n      {' '}\n      {// eslint-disable-next-line no-undef\n      window.K.Races.map(text => {\n        const label = text.split('|')[0];\n        return (\n          <Box key={label} margin={{ vertical: 'small' }}>\n            <RadioButton\n              name=\"prop\"\n              checked={selected === label}\n              label={label}\n              onChange={() => onSelect(label)}\n            />\n          </Box>\n        );\n      })}\n    </BoxWithTitle>\n  );\n};\n\nRaceSelection.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\n\nexport default RaceSelection;\n","import React from 'react';\nimport { Box, RadioButton } from 'grommet';\nimport PropTypes from 'prop-types';\nimport BoxWithTitle from '../shared/BoxWithTitle';\n\nconst ClassSelection = ({ selected, onSelect }) => {\n  return (\n    <BoxWithTitle title=\"Select Class\">\n      {' '}\n      {// eslint-disable-next-line no-undef\n      window.K.Klasses.map(text => {\n        const label = text.split('|')[0];\n        return (\n          <Box key={label} margin={{ vertical: 'small' }}>\n            <RadioButton\n              name=\"prop\"\n              checked={selected === label}\n              label={label}\n              onChange={() => onSelect(label)}\n            />\n          </Box>\n        );\n      })}\n    </BoxWithTitle>\n  );\n};\n\nClassSelection.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\n\nexport default ClassSelection;\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { Box, Grid } from 'grommet';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { sold } from '../reducers/helpers/newCharacter';\nimport { getTraits, getStats } from '../reducers/characterSheet';\nimport StatsGeneration from '../components/NewCharacter/StatsGeneration';\nimport NameGeneration from '../components/NewCharacter/NameGeneration';\nimport RaceSelection from '../components/NewCharacter/RaceSelection';\nimport ClassSelection from '../components/NewCharacter/ClassSelection';\nimport { roll, generateName, chooseClass, chooseRace, updateName } from '../actions';\n\nconst NewCharacterContainer = ({\n  traits,\n  stats,\n  /* eslint-disable no-shadow */\n  roll,\n  sold,\n  generateName,\n  chooseClass,\n  chooseRace,\n  updateName\n  /* eslint-enable no-shadow */\n}) => {\n  useEffect(() => {\n    if (!traits.Name) {\n      generateName();\n      roll();\n    }\n  });\n\n  return (\n    // eslint-disable-next-line react/jsx-filename-extension\n    <Grid\n      areas={[\n        { name: 'top', start: [0, 0], end: [2, 0] },\n        { name: 'name-generation', start: [0, 1], end: [2, 1] },\n        { name: 'race', start: [0, 2], end: [0, 2] },\n        { name: 'class', start: [1, 2], end: [1, 2] },\n        { name: 'stats', start: [2, 2], end: [2, 2] }\n      ]}\n      columns={['1/3', '1/3', '1/3']}\n      rows={['xxsmall', 'xxsmall', 'medium']}\n      gap=\"small\"\n      id=\"new-character\"\n    >\n      <Box gridArea=\"top\">\n        <h1>Progress Quest</h1>\n      </Box>\n      <Box gridArea=\"name-generation\">\n        <NameGeneration name={traits.Name} onGenerateName={generateName} onUpdate={updateName} />\n      </Box>\n      <RaceSelection\n        selected={traits.Race}\n        gridArea=\"race\"\n        background=\"brand\"\n        onSelect={chooseRace}\n      />\n      <ClassSelection\n        selected={traits.Class}\n        gridArea=\"class\"\n        background=\"brand\"\n        onSelect={chooseClass}\n      />\n      <StatsGeneration gridArea=\"stats\" stats={stats} onRoll={roll} onSold={sold} />\n    </Grid>\n  );\n};\n\nNewCharacterContainer.propTypes = {\n  traits: PropTypes.object.isRequired,\n  stats: PropTypes.object.isRequired,\n  sold: PropTypes.object.isRequired,\n  roll: PropTypes.object.isRequired,\n  generateName: PropTypes.object.isRequired,\n  chooseClass: PropTypes.object.isRequired,\n  chooseRace: PropTypes.object.isRequired,\n  updateName: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  traits: getTraits(state),\n  stats: getStats(state),\n  sold: sold(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  { roll, generateName, chooseClass, chooseRace, updateName }\n)(NewCharacterContainer);\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Box, Grommet } from 'grommet';\nimport GameTitle from '../components/GameTitle';\nimport MainContainer from './MainContainer';\nimport NewCharacterContainer from './NewCharacterContainer';\nimport theme from '../theme';\n\nconst App = () => (\n  // eslint-disable-next-line react/jsx-filename-extension\n  <Grommet theme={theme}>\n    <Box background=\"dark\">\n      <Router>\n        <Route path=\"/\" exact component={GameTitle} />\n        <Route path=\"/new\" exact component={NewCharacterContainer} />\n        <Route path=\"/game/:name\" component={MainContainer} />\n      </Router>\n    </Box>\n  </Grommet>\n);\n\nexport default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\nimport App from './containers/App'\n;\nrequire('./config.js');\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  // middleware.push(createLogger());\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer /* preloadedState, */,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}